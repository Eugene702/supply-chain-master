generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  ADMIN
  WAREHOUSE
  PURCHASING
  SUPPLIER
}

enum Unit{
  UNIT
  RIM
}

enum Status{
  PENDING
  APPROVED
  REJECTED
}

model User{
  id String @id @default(cuid())
  role Role
  email String @unique
  createdAt DateTime @default(now())
  deletedAt DateTime?

  profile Profile?
  supplier Supplier?
  purchase Purchase[]
  invoices Invoices[]
}

model Profile{
  id String @id
  name String
  createdAt DateTime @default(now())
  deletedAt DateTime?

  user User @relation(fields: [id], references: [id])
}

model Supplier{
  id String @id
  name String
  address String
  createdAt DateTime @default(now())
  deletedAt DateTime?

  user User @relation(fields: [id], references: [id])
}

model Item{
  id String @id @default(cuid())
  name String
  unit Unit
  stock Int
  createdAt DateTime @default(now())
  deletedAt DateTime?

  purchaseRequestItem PurchaseRequestItem[]
}

model PurchaseRequest{
  id String @id @default(cuid())
  status Status
  createdAt DateTime @default(now())
  deletedAt DateTime?

  purchaseRequestItem PurchaseRequestItem[]
}

model PurchaseRequestItem{
  id String @id @default(cuid())
  idPurchaseRequest String
  idItem String
  qty Int
  createdAt DateTime @default(now())
  deletedAt DateTime?

  item Item @relation(fields: [idItem], references: [id])
  purchaseRequest PurchaseRequest @relation(fields: [idPurchaseRequest], references: [id])
  purchaseItem PurchaseItem[]
}

model Purchase{
  id String @id 
  idSupplier String
  status Status
  month Int
  year Int
  createdAt DateTime @default(now())
  deletedAt DateTime?

  user User @relation(fields: [idSupplier], references: [id])
  purchaseItem PurchaseItem[]
  invoices Invoices?
}

model PurchaseItem{
  id String @id @default(cuid())
  idPurchase String
  idPurchaseRequestItem String 
  createdAt DateTime @default(now())
  deletedAt DateTime?

  purchase Purchase @relation(fields: [idPurchase], references: [id])
  purchaseRequestItem PurchaseRequestItem @relation(fields: [idPurchaseRequestItem], references: [id])
  invoiceItem InvoiceItem[]
}

model Invoices{
  id String @id
  idPurchase String @unique
  idSupplier String
  month Int
  year Int
  createdAt DateTime @default(now())
  deletedAt DateTime?

  user User @relation(fields: [idSupplier], references: [id])
  invoiceItem InvoiceItem[]
  purchase Purchase @relation(fields: [idPurchase], references: [id])
}

model InvoiceItem{
  id String @id @default(cuid())
  idInvoice String
  idPurchaseItem String
  qty Int
  price Int
  createdAt DateTime @default(now())
  deletedAt DateTime?

  invoice Invoices @relation(fields: [idInvoice], references: [id])
  purchaseItem PurchaseItem @relation(fields: [idPurchaseItem], references: [id])
}

model EvidenceCashExpenditure{
  id String @id
  idInvoice String
  idUser String
  createdAt DateTime @default(now())
}